@model IEnumerable<DevQuiz.Areas.Admin.ViewModels.SearchResultViewModel>

@{
    ViewBag.Title = "Search Results";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<ol class="breadcrumb">
    <li>@Html.ActionLink("Admin Home", "Index", "Home")</li>
    <li>@Html.ActionLink("Categories", "Index", "Categories")</li>
    <li class="active">Search Results</li>
</ol>
<hr />

<h2>Search Results for: @ViewBag.SearchTerm  </h2>

@{
    if (Model.Count() == 0)
    {
        <h4>No results found for: @ViewBag.SearchTerm  </h4>
    }
    else
    {
        string text = (Model.Count() == 1) ? "question" : "questions";
        <h4>@Model.Count() @text found containing @ViewBag.SearchTerm  </h4>
        <table class="table table-bordered table-hover table-responsive table-condensed admin-table-background">

            <tr>
                <th> @Html.DisplayNameFor(model => model.QuestionTitle) </th>
                <th> @Html.DisplayNameFor(model => model.QuestionText) </th>
                <th> @Html.DisplayNameFor(model => model.CategoryName) </th>
                <th> @Html.DisplayNameFor(model => model.SubCategoryName) </th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td> @Html.ActionLink(item.QuestionTitle, "Edit", "Questions", new { id = item.QuestionId }, null) </td>

                    @*<td> @Html.DisplayFor(modelitem => item.QuestionText) </td>*@
                    <td> @Html.Raw(item.QuestionText)</td>

                    <td> @Html.DisplayFor(modelitem => item.CategoryName) </td>
                    <td> @Html.DisplayFor(modelitem => item.SubCategoryName) </td>
                </tr>
            }

        </table>
    }
}



