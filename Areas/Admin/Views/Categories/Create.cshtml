@model DevQuiz.Areas.Admin.ViewModels.CategoryViewModel

@{
    ViewBag.Title = "Create Category";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<ol class="breadcrumb">
    <li>@Html.ActionLink("Admin Home", "Index", "Home")</li>
    <li>@Html.ActionLink("Categories", "Index", "Categories")</li>
    <li class="active">Create</li>
</ol>
<hr />      

<h2>Create New Category</h2>
<br />

@* Show a bootstrap alert:
    For errors coming back from the server side,
    (errors that were not checked by client javascript prior to posting to server) *@
@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger alert-dismissible fade in" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        @Html.ValidationSummary(true, "Please fix errors")
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">    
                
        <div class="form-group">
            @Html.LabelFor(model => model.CategoryName, htmlAttributes: new { @class = "control-label col-md-2" })           
            <div class="col-md-10">                
                @Html.EditorFor(model => model.CategoryName,
                                new { htmlAttributes = new { @class = "form-control", @title = "Enter a new category name (tooltip)", @autofocus= "autofocus" } })
                @*@Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })*@                
                @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "label label-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default btn-create-color" />
            </div>
        </div>      
        
    </div>
}




